- name: Backend
  hosts: backend
  become: yes

  tasks:
    - name: Disable old Node.js and enable Node.js 20
      ansible.builtin.shell: |
        dnf module disable nodejs -y
        dnf module enable nodejs:20 -y

    - name: Install Node.js
      ansible.builtin.dnf:
        name: nodejs
        state: present

    - name: Add the user 'expense'
      ansible.builtin.user:
        name: expense

    - name: Create application directory
      ansible.builtin.file:
        path: /app
        state: directory

    - name: Download the backend content
      ansible.builtin.get_url:
        url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
        dest: /app/expense-backend-v2.zip

    - name: Extract the application
      ansible.builtin.unarchive:
        src: /app/expense-backend-v2.zip
        dest: /app
        remote_src: yes

    - name: Install dependencies
      ansible.builtin.command:
        cmd: npm install
      args:
        chdir: /app

    - name: Copy backend service file
      ansible.builtin.copy:
        src: backend.service
        dest: /etc/systemd/system/backend.service

    - name: Reload systemd and start backend service
      ansible.builtin.systemd:
        daemon_reload: yes
        name: backend
        state: started
        enabled: yes

    - name: Install MySQL server
      ansible.builtin.dnf:
        name: mysql-server
        state: present

    - name: Start and enable MySQL
      ansible.builtin.service:
        name: mysqld
        state: started
        enabled: yes

    - name: Load MySQL schema
      ansible.builtin.shell: |
        mysql -h 34.229.193.132 -uroot -pExpenseApp@1 < /app/schema/backend.sql

    - name: Restart and enable backend service
      ansible.builtin.service:
        name: backend
        state: restarted
        enabled: yes


        