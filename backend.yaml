- name: configure backend server
  hosts: backend
  become: yes
  tasks:
    - name: disable nodejs -y
      ansible.builtin.command: dnf module disable nodejs -y
       name: nodejs
       disabled: yes

    - name: enable nodejs:20 -y
      ansible.builtin.service:
       name: nodejs
       enabled: yes

    - name: adding user
      ansible.builtin.user:
       name: expense


    - name: creating directory
      ansible.builtin.file:
       name: app
       state: directory

    - name: download the application
      ansible.builtin.get_url:
        url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
        dest: /tmp/backend.zip

    - name: change directory
      ansible.builtin.file:
       dest: /app

    - name: unzip application
      ansible.builtin.unarchive:
       src: /tmp/backend.zip
       dest: /app
       remote_src: yes
       


    - name: installing npm depndensies
      ansible.builtin.command: npm install
      args:
        chdir: /app


    - name: copy backend service
      ansible.builtin.copy:
       src: backend.service
       dest: /etc/systemd/system/backend.service


    - name: deamon reload service
      ansible.builtin.service:
       name: backendservice.repo
       state: reloaded

    - name: start backend service
      ansible.builtin.service:
       name: backend
       state: started

    - name: enable backend service
      ansible.builtin.service:
       name: backend
       enabled: yes

    - name: install mysql -y
      ansible.builtin.package:
       name: mysql
       state: started

    - name: loading schema
      ansible.builtin.command: mysql -h  -uroot -pExpenseApp@1 < /app/schema/backend.sql


      




      
      